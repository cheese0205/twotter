{"remainingRequest":"/Users/gaga/Developer/Git/twotter/node_modules/babel-loader/lib/index.js!/Users/gaga/Developer/Git/twotter/node_modules/eslint-loader/index.js??ref--13-0!/Users/gaga/Developer/Git/twotter/src/store/index.js","dependencies":[{"path":"/Users/gaga/Developer/Git/twotter/src/store/index.js","mtime":1604386175855},{"path":"/Users/gaga/Developer/Git/twotter/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/gaga/Developer/Git/twotter/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/gaga/Developer/Git/twotter/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlU3RvcmUgfSBmcm9tICd2dWV4JzsKZXhwb3J0IGRlZmF1bHQgY3JlYXRlU3RvcmUoewogIHN0YXRlOiB7CiAgICB1c2VyOiBudWxsCiAgfSwKICAvLyBNdXRhdGlvbnMgYXJlIGZ1bmN0aW9ucyB0aGF0IGVmZmVjdCB0aGUgU1RBVEUuCiAgbXV0YXRpb25zOiB7CiAgICBTRVRfVUVTUjogZnVuY3Rpb24gU0VUX1VFU1Ioc3RhdGUsIHVzZXIpIHsKICAgICAgc3RhdGUudXNlciA9IHVzZXI7CiAgICB9CiAgfSwKICAvLyBBY3Rpb25zIGFyZSBmdW5jdGlvbnMgdGhhdCB5b3UgY2FsbCB0aHJvdWdob3V0IHlvdXIgYXBwbGljYXRpb24gdGhhdCBjYWxsIG11dGF0aW9ucy4KICBhY3Rpb25zOiB7CiAgICBzZXRVc2VyOiBmdW5jdGlvbiBzZXRVc2VyKF9yZWYsIHVzZXIpIHsKICAgICAgdmFyIGNvbW1pdCA9IF9yZWYuY29tbWl0OwogICAgICBjb21taXQoJ1NFVF9VU0VSJywgdXNlcik7CiAgICB9CiAgfSwKICBtb2R1bGVzOiB7fQp9KTs="},{"version":3,"sources":["/Users/gaga/Developer/Git/twotter/src/store/index.js"],"names":["createStore","state","user","mutations","SET_UESR","actions","setUser","commit","modules"],"mappings":"AAAA,SAASA,WAAT,QAA4B,MAA5B;AAEA,eAAeA,WAAW,CAAC;AACzBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,IAAI,EAAE;AADD,GADkB;AAKzB;AACAC,EAAAA,SAAS,EAAE;AACTC,IAAAA,QADS,oBACAH,KADA,EACOC,IADP,EACa;AACpBD,MAAAA,KAAK,CAACC,IAAN,GAAaA,IAAb;AACD;AAHQ,GANc;AAYzB;AACAG,EAAAA,OAAO,EAAE;AACPC,IAAAA,OADO,yBACaJ,IADb,EACmB;AAAA,UAAhBK,MAAgB,QAAhBA,MAAgB;AACxBA,MAAAA,MAAM,CAAC,UAAD,EAAaL,IAAb,CAAN;AACD;AAHM,GAbgB;AAoBzBM,EAAAA,OAAO,EAAE;AApBgB,CAAD,CAA1B","sourcesContent":["import { createStore } from 'vuex'\n\nexport default createStore({\n  state: {\n    user: null\n  },\n\n  // Mutations are functions that effect the STATE.\n  mutations: {\n    SET_UESR(state, user) {\n      state.user = user\n    }\n  },\n\n  // Actions are functions that you call throughout your application that call mutations.\n  actions: {\n    setUser({ commit }, user) {\n      commit('SET_USER', user)\n    }\n\n  },\n\n  modules: {}\n})\n"]}]}