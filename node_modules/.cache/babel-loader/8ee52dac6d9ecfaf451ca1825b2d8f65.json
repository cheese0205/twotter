{"remainingRequest":"/Users/gaga/Developer/Git/twotter/node_modules/babel-loader/lib/index.js!/Users/gaga/Developer/Git/twotter/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/gaga/Developer/Git/twotter/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/gaga/Developer/Git/twotter/src/components/CreateTwootPanel.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/gaga/Developer/Git/twotter/src/components/CreateTwootPanel.vue","mtime":1604382905652},{"path":"/Users/gaga/Developer/Git/twotter/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/gaga/Developer/Git/twotter/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/gaga/Developer/Git/twotter/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/gaga/Developer/Git/twotter/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgcmVhY3RpdmUsIGNvbXB1dGVkIH0gZnJvbSAndnVlJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJDcmVhdGVUd29vdFBhbmVsIiwKICBzZXR1cDogZnVuY3Rpb24gc2V0dXAocHJvcHMsIGN0eCkgewogICAgdmFyIHN0YXRlID0gcmVhY3RpdmUoewogICAgICBuZXdUd29vdENvbnRlbnQ6ICcnLAogICAgICBzZWxlY3RlZFR3b290VHlwZTogJ2luc3RhbnQnLAogICAgICB0d29vdFR5cGVzOiBbewogICAgICAgIHZhbHVlOiAnZHJhZnQnLAogICAgICAgIG5hbWU6ICdEcmFmdCcKICAgICAgfSwgewogICAgICAgIHZhbHVlOiAnaW5zdGFudCcsCiAgICAgICAgbmFtZTogJ0luc3RhbnQgVHdvb3QnCiAgICAgIH1dCiAgICB9KTsKICAgIHZhciBuZXdUd29vdENoYXJhY3RlckNvdW50ID0gY29tcHV0ZWQoZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gc3RhdGUubmV3VHdvb3RDb250ZW50Lmxlbmd0aDsKICAgIH0pOwoKICAgIGZ1bmN0aW9uIGNyZWF0ZU5ld1R3b290KCkgewogICAgICBpZiAoc3RhdGUubmV3VHdvb3RDb250ZW50ICYmIHN0YXRlLnNlbGVjdGVkVHdvb3RUeXBlICE9PSAnZHJhZnQnKSB7CiAgICAgICAgY3R4LmVtaXQoJ2FkZC10d29vdCcsIHN0YXRlLm5ld1R3b290Q29udGVudCk7CiAgICAgICAgc3RhdGUubmV3VHdvb3RDb250ZW50ID0gJyc7CiAgICAgIH0KICAgIH0KCiAgICByZXR1cm4gewogICAgICBzdGF0ZTogc3RhdGUsCiAgICAgIG5ld1R3b290Q2hhcmFjdGVyQ291bnQ6IG5ld1R3b290Q2hhcmFjdGVyQ291bnQsCiAgICAgIGNyZWF0ZU5ld1R3b290OiBjcmVhdGVOZXdUd29vdAogICAgfTsKICB9Cn07"},{"version":3,"sources":["/Users/gaga/Developer/Git/twotter/src/components/CreateTwootPanel.vue"],"names":[],"mappings":"AAuBA,SAAS,QAAT,EAAmB,QAAnB,QAAmC,KAAnC;AAEA,eAAe;AACb,EAAA,IAAI,EAAE,kBADO;AAEb,EAAA,KAFa,iBAEP,KAFO,EAEA,GAFA,EAEK;AAChB,QAAM,KAAI,GAAI,QAAQ,CAAC;AACrB,MAAA,eAAe,EAAE,EADI;AAErB,MAAA,iBAAiB,EAAE,SAFE;AAGrB,MAAA,UAAU,EAAE,CACV;AAAE,QAAA,KAAK,EAAE,OAAT;AAAkB,QAAA,IAAI,EAAE;AAAxB,OADU,EAEV;AAAE,QAAA,KAAK,EAAE,SAAT;AAAoB,QAAA,IAAI,EAAE;AAA1B,OAFU;AAHS,KAAD,CAAtB;AASA,QAAM,sBAAqB,GAAI,QAAQ,CAAC;AAAA,aAAM,KAAK,CAAC,eAAN,CAAsB,MAA5B;AAAA,KAAD,CAAvC;;AAEA,aAAS,cAAT,GAA0B;AACxB,UAAI,KAAK,CAAC,eAAN,IAAyB,KAAK,CAAC,iBAAN,KAA4B,OAAzD,EAAkE;AAChE,QAAA,GAAG,CAAC,IAAJ,CAAS,WAAT,EAAsB,KAAK,CAAC,eAA5B;AACA,QAAA,KAAK,CAAC,eAAN,GAAwB,EAAxB;AACF;AACF;;AAEA,WAAO;AACL,MAAA,KAAK,EAAL,KADK;AAEL,MAAA,sBAAsB,EAAtB,sBAFK;AAGL,MAAA,cAAa,EAAb;AAHK,KAAP;AAKF;AA1Ba,CAAf","sourcesContent":["<template>\n  <form class=\"create-twoot-panel\" @submit.prevent=\"createNewTwoot\" :class=\"{ '--exceeded': newTwootCharacterCount > 180 }\">\n    <label for=\"newTwoot\"><strong>New Twoot</strong> ({{ newTwootCharacterCount }}/180)</label>\n    <textarea id=\"newTwoot\" rows=\"4\" v-model=\"state.newTwootContent\"/>\n\n    <div class=\"create-twoot-panel__submit\">\n      <div class=\"create-twoot-type\">\n        <label for=\"newTwootType\"><strong>Type: </strong></label>\n        <select id=\"newTwootType\" v-model=\"state.selectedTwootType\">\n          <option :value=\"option.value\" v-for=\"(option, index) in state.twootTypes\" :key=\"index\">\n              {{ option.name }}\n          </option>\n        </select>\n      </div>\n\n      <button>\n        Twoot It!\n      </button>\n    </div>\n  </form>\n</template>\n\n<script>\nimport { reactive, computed } from 'vue';\n\nexport default {\n  name: \"CreateTwootPanel\",\n  setup(props, ctx) {\n    const state = reactive({\n      newTwootContent: '',\n      selectedTwootType: 'instant',\n      twootTypes: [\n        { value: 'draft', name: 'Draft' },\n        { value: 'instant', name: 'Instant Twoot'}\n      ]\n    })\n\n    const newTwootCharacterCount = computed(() => state.newTwootContent.length)\n\n    function createNewTwoot() {\n      if (state.newTwootContent && state.selectedTwootType !== 'draft') {\n        ctx.emit('add-twoot', state.newTwootContent);\n        state.newTwootContent = '';\n      }\n    }\n\n    return {\n      state,\n      newTwootCharacterCount,\n      createNewTwoot\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.create-twoot-panel {\n  margin-top: 20px;\n  padding: 20px 0;\n  display: flex;\n  flex-direction: column;\n\n  textarea {\n    border: 1px solid #DFE3E8;\n    border-radius: 5px;\n  }\n\n  .create-twoot-panel__submit {\n    display: flex;\n    justify-content: space-between;\n\n    .create-twoot-type {\n      padding: 10px 0;\n    }\n\n    button {\n      padding: 5px 20px;\n      margin: auto 0;\n      border-radius: 5px;\n      border: none;\n      background-color: deepskyblue;\n      color: white;\n      font-weight: bold;\n    }\n  }\n\n  &.--exceeded {\n    color: red;\n    border-color: red;\n\n    .create-twoot-panel__submit {\n      button {\n        background-color: red;\n        color: white;\n      }\n    }\n  }\n}\n</style>"],"sourceRoot":""}]}